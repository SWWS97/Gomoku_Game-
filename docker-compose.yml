version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./envs/.env.prod
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy      # ✅ DB 준비될 때까지 대기
      redis:
        condition: service_started
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput || true &&
      daphne -b 0.0.0.0 -p 8000 config.asgi:application
      "
    restart: unless-stopped

  db:
    image: postgres:16
    env_file:
      - ./envs/.env.prod                # ✅ 절대경로 대신 repo 기준 상대경로
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7
    restart: unless-stopped

volumes:
  pgdata: