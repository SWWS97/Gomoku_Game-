name: Deploy to EC2 (Docker)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out (for metadata only)
        uses: actions/checkout@v4

      - name: SSH deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail

            # ---- Docker/Compose 준비 ----
            command -v docker >/dev/null 2>&1 || curl -fsSL https://get.docker.com | sudo sh
            if ! docker compose version >/dev/null 2>&1; then
              sudo apt-get update -y && sudo apt-get install -y docker-compose-plugin
            fi
            command -v git >/dev/null 2>&1 || sudo apt-get install -y git

            # ---- 앱 디렉토리 & 코드 ----
            APP_DIR=/srv/gomoku
            REPO_URL="${{ secrets.REPO_URL }}"
            sudo mkdir -p "$APP_DIR"
            sudo chown ubuntu:ubuntu "$APP_DIR"

            if [ ! -d "$APP_DIR/.git" ]; then
              git clone "$REPO_URL" "$APP_DIR"
            else
              cd "$APP_DIR"
              git fetch origin
              git reset --hard origin/main
            fi

            cd "$APP_DIR"

            # ---- 환경변수 파일 ----
            mkdir -p envs
            printf "%s\n" "${{ secrets.ENV_PROD }}" > envs/.env.prod

            # ---- 빌드 + 실행 (prod만 사용) ----
            # 베이스 이미지 최신화 위해 --pull 권장
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build --pull=always

            # (선택) 베이스 command(Dockerfile)에서 migrate/collectstatic을 이미 수행한다면 아래 2줄은 생략 가능
            # docker compose exec -T web python manage.py migrate --noinput
            # docker compose exec -T web python manage.py collectstatic --noinput || true

            # ---- 상태/로그 체크 ----
            docker compose ps
            docker compose logs -n 80 web

            # ---- 사용 안 하는 이미지/레이어 정리 ----
            docker system prune -f